lang Object net n3 nanoxml Std Xml Parser Std Xml Parser Std Xml Parser finalize lang Throwable set Builder I Xml Builder builder I Xml Builder get Builder set Validator I Xml Validator validator I Xml Validator get Validator set Resolver I Xml Entity Resolver resolver I Xml Entity Resolver get Resolver set Reader I Xml Reader reader I Xml Reader get Reader lang Object parse Xml Exception scan Data lang Exception scan Some Tag allow C A T A lang String default Namespace util Properties namespaces lang Exception process P I lang Exception process Special Tag allow C A T A lang Exception process C A T A lang Exception process Doc Type lang Exception process Element lang String default Namespace util Properties namespaces lang Exception process Attribute util Vector attr Names util Vector attr Values util Vector attr Types lang Exception All Implemented Interfaces I Xml Parser Std Xml Parser lang Object implements I Xml Parser Creates new parser Cleans up the when it's destroyed Overrides finalize lang Object Throws lang Throwable Sets the builder which creates the logical structure of the Xml data Specified by set Builder I Xml Parser Parameters builder - the non-null builder Returns the builder which creates the logical structure of the Xml data Specified by get Builder I Xml Parser Returns the builder Sets the validator that validates the Xml data Specified by set Validator I Xml Parser Parameters validator - the non-null validator Returns the validator that validates the Xml data Specified by get Validator I Xml Parser Returns the validator Sets the entity resolver Specified by set Resolver I Xml Parser Parameters resolver - the non-null resolver Returns the entity resolver Specified by get Resolver I Xml Parser Returns the non-null resolver Sets the reader from which the parser retrieves its data Specified by set Reader I Xml Parser Parameters reader - the reader Returns the reader from which the parser retrieves its data Specified by get Reader I Xml Parser Returns the reader Parses the data and lets the builder create the logical data structure Specified by parse I Xml Parser Returns the logical structure built by the builder Throws Xml Exception - if error occurred reading or parsing the data See Also I Xml Builder get Result Scans the Xml data for elements Throws lang Exception - if something went wrong Scans Xml tag Parameters allow C A T A - if C A T A sections are allowed this point default Namespace - the default namespace U R I or namespaces - list of defined namespaces Throws lang Exception - if something went wrong Processes quot processing instruction quot Throws lang Exception - if something went wrong Processes tag that starts with bang Parameters allow C A T A - if C A T A sections are allowed this point Throws lang Exception - if something went wrong Processes C A T A section Throws lang Exception - if something went wrong Processes document type declaration Throws lang Exception - if error occurred reading or parsing the data Processes regular element Parameters default Namespace - the default namespace U R I or namespaces - list of defined namespaces Throws lang Exception - if something went wrong Processes attribute of element Parameters attr Names - contains the names of the attributes attr Values - contains the values of the attributes attr Types - contains the types of the attributes Throws lang Exception - if something went wrong 